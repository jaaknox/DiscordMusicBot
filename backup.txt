const ytdl = require('ytdl-core');
const ytSearch = require('yt-search');

module.exports = {
    name: 'play',
    description: 'Joins and plays a Youtube video',
    async execute(message, args) {
        const voiceChannel = message.member.voice.channel;

        if (!voiceChannel) return message.channel.send('get in a call first dumbass');
        const permissions = voiceChannel.permissionsFor(message.client.user);
        if (!permissions.has('CONNECT')) return message.channel.send('Ermm, permissions error? Ask Jacob Prime');
        if (!permissions.has('SPEAK')) return message.channel.send('Ermm, permissions error? Ask Jacob Prime');
        if (!args.length) return message.channel.send('play what');

        const validURL = (str) =>{
            var regex = /(http|https):\/\/(\w+:{0,1}\w*)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/;
            if(!regex.test(str)){
                return false;
            } else {
                return true;
            }
        }

        if(validURL(args[0])){
            const connection = await voiceChannel.join();
            const stream = ytdl(args[0], {filter: 'audioonly'});

            connection.play(stream, {seek: 0, volume: 1})
            .on('finish', () =>{
                voiceChannel.leave();
            });

            await message.reply(`playing whatever link you just sent:`)

            return
        }

        const connection = await voiceChannel.join();

        const videoFinder = async (query) => {
            const videoResult = await ytSearch(query);

            return (videoResult.videos.length > 1) ? videoResult.videos[0] : null;

        }

        const video = await videoFinder(args.join(' '));

        if(video){
            const stream = ytdl(video.url, {filter: 'audioonly'});
            connection.play(stream, {seek: 0, volume: 1})
            .on('finish', () =>{
                voiceChannel.leave();
            });

            await message.reply(`playing ***${video.title}***`)
        } else {
            message.channel.send('NO videos found matching your request. how did you do that');
        }

    }
}









V2


const ytdl = require('ytdl-core');
const ytSearch = require('yt-search');

module.exports = {
    name: 'play',
    description: 'Joins and plays a Youtube video',
    async execute(message, args, queue, arr) {
        const voiceChannel = message.member.voice.channel;

        if (!voiceChannel) return message.channel.send('get in a call first dumbass');
        const permissions = voiceChannel.permissionsFor(message.client.user);
        if (!permissions.has('CONNECT')) return message.channel.send('Ermm, permissions error? Ask Jacob Prime');
        if (!permissions.has('SPEAK')) return message.channel.send('Ermm, permissions error? Ask Jacob Prime');
        if (!args.length) return message.channel.send('play what');

        const validURL = (str) =>{
            var regex = /(http|https):\/\/(\w+:{0,1}\w*)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/;
            if(!regex.test(str)){
                return false;
            } else {
                return true;
            }
        }

        const connection = await voiceChannel.join();
        //If it is a URL:
        if(validURL(args[0])){
            const stream = ytdl(args[0], {filter: 'audioonly'});
            queue.push(stream);
            if(!queue[1]) {
                await message.reply(`playing whatever link you just sent:`)
            } else {
                await message.reply(`added whatever link you just sent to the queue`)
            }
        } else { //Otherwise, find the video

        const videoFinder = async (query) => {
            const videoResult = await ytSearch(query);
            return (videoResult.videos.length > 1) ? videoResult.videos[0] : null;
        }
        const video = await videoFinder(args.join(' '));

        //If a video was found, play it
        if(video){
            const stream = ytdl(video.url, {filter: 'audioonly'});
            queue.push(stream);
            if(!queue[1]) {
                await message.reply(`playing ***${video.title}***`)
            } else {
                await message.reply(`added ***${video.title}*** to the queue`)
            }
        } else {
            message.channel.send('NO videos found matching your request. how did you do that');
        }

        }
        
        if(!queue[1]) {
            play(message, queue, connection);
        }
    }
}

async function play(message, queue, connection) {
    const voiceChannel = message.member.voice.channel;
    connection.play(queue[0], {seek: 0, volume: 1})
            .on('finish', () =>{
                queue.shift();
                if(queue[0]) {
                    play(message, queue, connection);
                }
            });
}